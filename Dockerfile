### MULTI-STAGE BUILD
## STAGE 1 - Building assets
## STAGE 2 - Serving static content
# ARG APPLICATION_PATH="/frontend"
# ARG BUILDED_ASSETS_DIRECTORY="${APPLICATION_PATH}/build"
# ARG NGINX_CONTENT_SERVING_DIRECTORY=/usr/share/nginx/html

## STAGE 1 - Building assets
# Install application dependencies and generates static css/html/js files.
FROM node:alpine as building_assets_stage
WORKDIR /frontend
# WORKDIR ${APPLICATION_PATH}

# [cache-prone] Install dependencies
COPY ./package.json .
RUN yarn install

# [cache-prone] Copy all source files including installed dependencies
COPY . .
RUN yarn build

## STAGE 2 - Serving static content
# Copy the static css/html/js files generated by the previous stage to nginx directory.
# "EXPOSE" instruction is necessary in order to AWS "elastic beanstalk" knows where to direct traffic to.
FROM nginx as serving_static_content_stage
EXPOSE 80
COPY --from=building_assets_stage /frontend/build /usr/share/nginx/html
# COPY --from=building_assets_stage ${BUILDED_ASSETS_DIRECTORY} ${NGINX_CONTENT_SERVING_DIRECTORY}
